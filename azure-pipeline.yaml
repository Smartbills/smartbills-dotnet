pool: 
  vmImage: windows-2022
trigger:
  branches:
    include:
    - '*'

steps:
- task: UseDotNet@2
  inputs:
    version: '7.x'
- task: gitversion/setup@0
  inputs:
    versionSpec: '5.x'
    includePrerelease: true
- task: gitversion/execute@0
  inputs:
    useConfigFile: true
    configFilePath: 'git-version.yml'
- task: DownloadSecureFile@1
  name: nugetCertificate
  displayName: 'Download nuget signing certificate'
  inputs:
    secureFile: 'nuget-org.pfx'
- task: NodeTool@0
  inputs:
    versionSource: 'spec'
    versionSpec: '18'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: |
      **/*.csproj
- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    configuration: 'Release'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.NuGetVersion'
    verbosityPack: 'Diagnostic'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: Import-PfxCertificate -FilePath "$(nugetCertificate.secureFilePath)" -Password (ConvertTo-SecureString -String '$(certificate-code)' -AsPlainText -Force) -CertStoreLocation Cert:\LocalMachine\Root
  
- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'nuget'
    arguments: 'sign .\**\*.nupkg --certificate-path "$(nugetCertificate.secureFilePath)" --timestamper http://timestamp.digicert.com/ --timestamp-hash-algorithm SHA512 --certificate-password $(certificate-code)'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    publishLocation: 'pipeline'