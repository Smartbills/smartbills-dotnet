name: Release
permissions:
  contents: write
  issues: write
  actions: write
  pull-requests: write
  packages: write
  deployments: write
on:
  workflow_run:
    workflows: [Build]
    types:
      - completed
    branches: [main, master, dev]

env:
  DOTNET_VERSION: "8.0.x"

jobs:
  release:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'push'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_commit.id }}

      - name: Setup Git authentication
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install semantic-release dependencies
        run: |
          npm install -g semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/github

      - name: Semantic Release (Dry Run)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release --debug --dry-run > dry-run-output.txt 
          version=$(grep -oP '(?<=The next release version is ).*' dry-run-output.txt)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Pack NuGet packages
        run: |
          echo "Package version: ${{ env.VERSION }}"
          dotnet pack Smartbills.SDK/Smartbills.SDK.csproj -c Release -p:PackageVersion=${{ env.VERSION }} -p:RepositoryUrl=https://github.com/${{ github.repository }} -o nupkg
          dotnet pack Smartbills.SDK.AspNetCore/Smartbills.SDK.AspNetCore.csproj -c Release -p:PackageVersion=${{ env.VERSION }} -p:RepositoryUrl=https://github.com/${{ github.repository }} -o nupkg

      - name: Setup GitHub Packages Authentication
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
          --username ${{ github.actor }} \
          --password ${{ secrets.GITHUB_TOKEN }} \
          --store-password-in-clear-text \
          --name github

      - name: Publish to GitHub Packages
        run: |
          for package in ./nupkg/*.nupkg; do
            echo "Publishing package: $package"
            dotnet nuget push $package --source "github" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
          done
