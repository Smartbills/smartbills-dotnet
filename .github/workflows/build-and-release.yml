name: Build and Release

permissions:
  contents: write
  issues: write
  actions: write
  pull-requests: write
  packages: write
  deployments: write

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

env:
  DOTNET_VERSION: "8.0.x"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: true
          cache-dependency-path: "**/packages.lock.json"

      - name: Restore dependencies
        run: |
          dotnet restore Smartbills.NET/Smartbills.NET.csproj --locked-mode
          dotnet restore Smartbills.NET.AspNetCore/Smartbills.NET.AspNetCore.csproj --locked-mode

      - name: Build
        run: |
          dotnet build Smartbills.NET/Smartbills.NET.csproj --configuration Release --no-restore
          dotnet build Smartbills.NET.AspNetCore/Smartbills.NET.AspNetCore.csproj --configuration Release --no-restore

      - name: Upload build artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            Smartbills.NET/bin/Release/
            Smartbills.NET.AspNetCore/bin/Release/
          retention-days: 1
          compression-level: 6

  release:
    runs-on: ubuntu-latest
    needs: build
    if: success() && (github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main')

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Corepack enable
        run: |
          corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: "yarn"
          node-version: "20"
          cache-dependency-path: yarn.lock

      - name: Install semantic-release dependencies
        run: |
          yarn install --immutable

      - name: Semantic Release dry-run version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn get-next-version
          version=$(grep -oP '(?<=The next release version is ).*' semantic-release-output.txt)
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Pack NuGet packages
        run: |
            echo "Package version: ${{ env.VERSION }}"
            dotnet pack Smartbills.NET/Smartbills.NET.csproj -c Release -p:PackageVersion=${{ env.VERSION }} -p:RepositoryUrl=https://github.com/${{ github.repository }} -o nupkg
            dotnet pack Smartbills.NET.AspNetCore/Smartbills.NET.AspNetCore.csproj -c Release -p:PackageVersion=${{ env.VERSION }} -p:RepositoryUrl=https://github.com/${{ github.repository }} -o nupkg

      - name: Publish to GitHub Packages
        run: |
            for package in ./nupkg/*.nupkg; do
              echo "Publishing package: $package"
              dotnet nuget push $package --source "https://api.nuget.org/v3/index.json" --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
            done
  

      - name: Semantic Release dry-run version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn release
